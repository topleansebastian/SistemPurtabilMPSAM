@model MPSAM.Web.ViewModels.PacientSearchViewModel
@{
    ViewBag.Title = "PacientsTable";
}
@Scripts.Render("~/bundles/jquery")
<br />
<center><h2>PACIENȚI</h2></center>
<div>
    <br />
    <br />
    <form method="post">
        <label style=" font-family: 'Montserrat', sans-serif;font-size: 19px;color: #222222;font-weight: bold;">Căutare pacient</label>
        <div class="form-row">
            <div class="col">
                <input id="searchTxt" name="Search" class="form-control form-control-lg" value="@Model.WordToBeSearched" placeholder="Introduceți nume, prenume sau cnp..." />
            </div>
            <div class="col">
                <button type="button" id="searchBtn" class="Btn" data-toggle="tooltipSearch" title="Cautare">
                    <i class="fa fa-search" aria-hidden="true"></i>
                </button>
                <button type="button" id="resetBtn" style="position:absolute;" class="Btn" data-toggle="tooltipReset" title="Resetare filtre">
                    <i class="fa fa-undo" aria-hidden="true"></i>
                </button>
            </div>
            <div class="col">

            </div>
        </div>
    </form>
    <br />
    <button type="button" id="newBtn" data-toggle="tooltip" title="Adauga un nou pacient" class="Btn">
        <i class="fa fa-plus-square" aria-hidden="true"></i>
    </button>
</div>
<hr />
<br />
<div class="filter-shop clearfix">
    <p class="showing-product float-left" style="font-size:1.5rem">
        Număr de pacienti: @Model.Pagination.TotalItems
    </p>
</div>
<div>
    <table id="ProductsTable" class="table table-hover table-bordered">
        <thead>
            <tr style=" font-family: 'Montserrat', sans-serif;font-size: 15px;color: #222222;font-weight: bold;text-align: center;">
                <td>CNP</td>
                <td>NUME</td>
                <td>TELEFON</td>
                <td>EMAIL</td>
                <td>ACȚIUNI</td>
            </tr>
        </thead>
        <tbody>

            @foreach (var pacient in Model.Pacients)
            {
                <tr style="font-size:1.5rem">
                    <td style="text-transform: uppercase;">@pacient.CNP</td>
                    <td>@pacient.Nume @pacient.Prenume</td>
                    <td>@pacient.Telefon</td>
                    <td>@pacient.Email</td>
                    <td style="text-align: center;">
                        <button class="infoBtn Btn" @*data-id="@pacient.ID"*@ data-toggle="tooltipInfoBtn" title="Informatii pacient" onclick="location.href='@Url.Action("InfoPacient", "Doctor", new { ID = pacient.ID })'">
                            <i class="fa fa-file-text-o" aria-hidden="true"></i>
                        </button>
                        <button class="editBtn Btn" data-id="@pacient.ID" data-toggle="tooltipEditBtn" title="Editare pacient">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </button>
                        <button class="deleteBtn Btn" data-id="@pacient.ID" data-toggle="tooltipDeleteBtn" title="Ștergere pacient">
                            <i class="fa fa-trash-o" aria-hidden="true"></i>
                        </button>
                        <button class="recomBtn Btn" data-id="@pacient.ID" data-toggle="tooltipRecomBtn" title="Adaugă recomandare">
                            <i class="fa fa-comments" aria-hidden="true"></i>
                        </button>
                        <button class="activityBtn Btn" data-id="@pacient.ID" data-toggle="tooltipActivityBtn" title="Adaugă activitate">
                            <i class="fa fa-bicycle" aria-hidden="true"></i>
                        </button>
                        <button class="alarmBtn Btn" data-id="@pacient.ID" data-toggle="tooltipAlarmBtn" title="Adaugă alarmă">
                            <i class="fa fa-bell" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
    <div style="text-align: center;">
        @if (Model.Pagination != null)
        {
            if (Model.Pagination.CurrentPage > 1)
            {
                <button class="pageBtn Btn" data-pageNumber="1"><<</button>
                <button class="pageBtn Btn" data-pageNumber="@(Model.Pagination.CurrentPage - 1)"><</button>
            }
            for (var page = Model.Pagination.StartPage; page <= Model.Pagination.EndPage; page++)
            {
                string BtnActive = Model.Pagination.CurrentPage == page ? "active bg-secondary" : string.Empty;
                <button class="@BtnActive pageBtn Btn" data-pageNumber="@page">@page</button>
            }
            if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
            {
                <button class="pageBtn Btn" data-pageNumber="@(Model.Pagination.CurrentPage + 1)">></button>
                <button class="pageBtn Btn" data-pageNumber="@Model.Pagination.EndPage">>></button>
            }
        }

    </div>
</div>
<br />
<br />

<script>
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({

            url: '/Doctor/PacientsTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });

    $("#searchTxt").on('keypress', function (e) {
        var code = e.keyCode || e.which;
        if (code == 13) {
            var searchValue = $("#searchTxt").val();
            $.ajax({

                url: '/Doctor/PacientsTable',
                data: {
                    search: searchValue
                }
            })
                .done(function (response) {
                    $("#tableContainer").html(response);
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Failed");
                });
        }
    });

    $("#resetBtn").click(function () {
        var searchValue = '';
        $.ajax({

            url: '/Doctor/PacientsTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });
    $("#newBtn").click(function () {
        $.ajax({

            url: '/Doctor/CreatePacient',
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction();
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });

    $(".editBtn").click(function () {
        $.ajax({

            url: '/Doctor/EditPacient',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction();
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });
    $(".deleteBtn").click(function () {
        swal({
            title: "Confirmare ștergere",
            text: "În urma ștergerii, toate datele pacientului vor fi șterse",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: 'POST',
                        url: '/Doctor/DeletePacient',
                        data: {
                            ID: $(this).attr('data-id')
                        }
                    })
                        .done(function (response) {
                            $("#tableContainer").html(response);

                            swal("Pacientul a fost șters", {
                                icon: "success",
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Failed");
                        });
                }
            });
    });
    $(".recomBtn").click(function () {
        $.ajax({

            url: '/Doctor/CreateRecommendation',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction();
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });
    $(".activityBtn").click(function () {
        $.ajax({

            url: '/Doctor/CreateActivity',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction();
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });
    //used for pagination
    $(".pageBtn").click(function () {
        $.ajax({

            url: '/Doctor/PacientsTable',
            data: {
                pageNumber: $(this).attr("data-pageNumber")
            }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });
    //TOOLTIP
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        $('[data-toggle="tooltipInfoBtn"]').tooltip();
        $('[data-toggle="tooltipEditBtn"]').tooltip();
        $('[data-toggle="tooltipDeleteBtn"]').tooltip();
        $('[data-toggle="tooltipSearch"]').tooltip();
        $('[data-toggle="tooltipReset"]').tooltip();
        $('[data-toggle="tooltipRecomBtn"]').tooltip();
        $('[data-toggle="tooltipActivityBtn"]').tooltip();
    });

    function focusAction() {
        $('html, body').animate({
            scrollTop: $("#actionContainer").offset().top - 100
        }, 1000);
    }
</script>
